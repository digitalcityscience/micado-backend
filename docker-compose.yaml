version: "3.7"
services:
  backend:
    image: micadoproject/micado_backend:12.20.1
    depends_on:
      # - git:
      #   condition: service_healthy
      #   restart: true
      micado_db:
        condition: service_healthy
        restart: true
    stdin_open: true
    tty: true
    volumes:
      - type: volume
        source: backend
        target: /code
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - type: volume
        source: shared_images
        target: /images
    tmpfs: /tmp/translations
    ports:
      - "3000:3000"
    #     - "8080:8080"
    #    command: /bin/sh -c "cd backend && npm start"
    command: /bin/sh -c "bash"
    env_file:
      - .env
      # - prod.env
    environment:
      - MICADO_GIT_URL=${MICADO_GIT_URL}
      - ROCKETCHAT_HOSTNAME=${ROCKETCHAT_HOSTNAME}
      - ROCKETCHAT_ADMIN=${ROCKETCHAT_ADMIN}
      - ROCKETCHAT_ADMIN_PWD=${ROCKETCHAT_ADMIN_PWD}
      # don't use the /tmp/translations from tmpfs because it gives a permission error (have to fix this).
      - MICADO_TRANSLATIONS_DIR=/tmp/translations-repo
      - POSTGRES_DB=${POSTGRES_DB}
      - MICADO_DB_PWD=${MICADO_DB_PWD}
      - MICADO_DB_USER=${MICADO_DB_USER}
      - MICADO_DB_SCHEMA=${MICADO_DB_SCHEMA}
      - WSO2_IDENTITY_ADMIN_PWD=${WSO2_IDENTITY_ADMIN_PWD}
      - WSO2_IDENTITY_ADMIN_USER=${WSO2_IDENTITY_ADMIN_USER}
      - MICADO_ENV=${MICADO_ENV}
      - IDENTITY_HOSTNAME=${IDENTITY_HOSTNAME}
      - WEBLATE_EMAIL_HOST=${WEBLATE_EMAIL_HOST}
      - WEBLATE_EMAIL_HOST_USER=${WEBLATE_EMAIL_HOST_USER}
      - WEBLATE_EMAIL_HOST_SSL=${WEBLATE_EMAIL_HOST_SSL}
      - WEBLATE_EMAIL_HOST_PASSWORD=${WEBLATE_EMAIL_HOST_PASSWORD}
      - ANALYTIC_HOSTNAME=${ANALYTIC_HOSTNAME}
      - COUNTLY_MIGRANTS_APP_ID=${COUNTLY_MIGRANTS_APP_ID}
      - COUNTLY_MIGRANTS_API_KEY=${COUNTLY_MIGRANTS_API_KEY}
      - COUNTLY_ADMIN=${COUNTLY_ADMIN}
      - COUNTLY_ADMIN_PWD=${COUNTLY_ADMIN_PWD}
      - ALGORITHM=${ALGORITHM}
      - SALT=${SALT}
      - KEY_LENGTH=${KEY_LENGTH}
      - BUFFER_0=${BUFFER_0}
      - BUFFER_1=${BUFFER_1}
      - ALGORITHM_PASSWORD=${ALGORITHM_PASSWORD}
    networks:
      - micado_net

  micado_db:
    image: groonga/pgroonga:2.3.4-alpine-11-slim
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "pg_isready", "-d", "db_prod"]
      interval: 30s
      timeout: 100s
      retries: 15
      start_period: 60s    
    stdin_open: true
    tty: true
    env_file:
      - .env
    ports:
      - 127.0.0.1:5532:5432
    volumes:
      - micado-db_data:/var/lib/postgresql/data
      - ./db_init:/docker-entrypoint-initdb.d
    labels:
      - "com.centurylinklabs.watchtower.enable=false"
    networks:
      - micado_net

  git:
    image: gitea/gitea:1.12.2
    container_name: gitea
    environment:
      GIT_HOSTNAME: ${GIT_HOSTNAME}
      INSTALL_LOCK: "false"
      DB_TYPE: postgres
      DB_HOST: micado_db:${POSTGRES_PORT}
      DB_NAME: ${POSTGRES_DB}
      DB_USER: ${GITEA_DB_USER}
      DB_PASSWD: ${GITEA_DB_PWD}
      DISABLE_REGISTRATION: "true"
    restart: always
    networks:
      - micado_net
    volumes:
      - micado-git_data:/data
      - ./logs/gitea:/data/gitea/log
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
    ports:
      - "3001:3000"
      - "222:22"
    depends_on:
      micado_db:
        condition: service_healthy
        restart: true  
  keycloak:
    image: jboss/keycloak:16.1.1
    depends_on:
      micado_db:
        condition: service_healthy
        restart: true
    # domainname: micadoproject.eu
    env_file:
      - .env
    command: ["-b","0.0.0.0"]
    environment:
      DB_VENDOR: POSTGRES
      DB_USER: ${KEYCLOAK_DB_USER}
      DB_SCHEMA: ${KEYCLOAK_DB_SCHEMA}
      DB_PASSWORD: ${KEYCLOAK_DB_PWD}
      KEYCLOAK_USER: ${WSO2_IDENTITY_ADMIN_USER}
      KEYCLOAK_PASSWORD: ${WSO2_IDENTITY_ADMIN_PWD}
      IDENTITY_HOSTNAME: ${IDENTITY_HOSTNAME}
      DB_ADDR: micado_db:5432
      DB_DATABASE: keycloak
      KEYCLOAK_LOGLEVEL: DEBUG
      PROXY_ADDRESS_FORWARDING: "true"
      KEYCLOAK_HOSTNAME: ${IDENTITY_HOSTNAME}
      # Uncomment the line below if you want to specify JDBC parameters. The parameter below is just an example, and it shouldn't be used in production without knowledge. It is highly recommended that you read the PostgreSQL JDBC driver documentation in order to use it.
      #JDBC_PARAMS: "ssl=true"
    ports:
      - 8100:8100
    # volumes:
    #   - type: bind
    #     source: ./keycloak/keycloak-config/
    #     target: /opt/jboss/keycloak/standalone/configuration/
    #   - type: bind
    #     source: ./keycloak/keycloak-extensions/
    #     target: /opt/jboss/keycloak/standalone/deployments/
    #   - ./keycloak/themes/micado:/opt/jboss/keycloak/themes/micado
    networks:
      - micado_net
volumes:
  postgres_data:
    driver: local
    driver_opts:
      type: none
      # device is the path in the host that has to be absolute
      device: ./db_data
      o: bind
  postgres_init:
    driver: local
    driver_opts:
      type: none
      # device is the path in the host that has to be absolute
      device: ./db_init
      o: bind
  backend:
    driver: local
    driver_opts:
      type: none
      device: ./application
      o: bind
  shared_images:
    driver: local
    driver_opts:
      type: none
      device: ./shared_images
      o: bind
  micado-db_data:
  micado-git_data:

networks:
  micado_net:
    # driver: bridge
    # external: true